#include <iostream>
#include <cstdio>
using namespace std;
class Shape {
public:
virtual double area() { return 0; } // Provide a default implementation
virtual double Area() { return 0; } // Provide a default implementation
};
class Circle : public Shape {
public:
double radius, PI;
Circle(double r) : radius(r), PI(3.14) {}
double area() override {
	return PI * radius * radius;
}
};
class Rectangle : public Shape {
public:
double width, height;
Rectangle(double w, double h) : width(w), height(h) {}
double Area() override {
	return width * height;
}
};

int main() {
Shape* s[4];
s[0] = new Circle(1);
s[1] = new Circle(2);
s[2] = new Rectangle(1, 2);
s[3] = new Rectangle(3, 4);
for (int i = 0; i < 2; i++) {
	cout << s[i]->area() << endl;
}
for (int i = 2; i < 4; i++) {
	cout << s[i]->Area() << endl;
}

// Clean up memory
for (int i = 0; i < 4; i++) {
	delete s[i];
}
}
