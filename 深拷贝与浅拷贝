#include <iostream>
#include <cstdio>
using namespace std;
class Person {
public:
	Person() {
		cout << "Person 默认构造函数的调用" << endl;
	}
	Person(int age,int height) {
		cout << "Person 有参构造函数的调用" << endl;
		m_Age = age;
		m_Height = new int(height);
	}
	//如果不写拷贝构造函数，编译器会自动生成基础的拷贝构造函数（浅拷贝）
	//自己实现拷贝构造函数，解决浅拷贝带来的问题，一般用于有指针的情况（深拷贝）
	Person(const Person& p) {
		cout << "Person 拷贝构造函数调用（深拷贝）" << endl;
		m_Age = p.m_Age;
		m_Height = new int(*p.m_Height);	//深拷贝，开辟新的内存空间，避免重复释放//m_Height=p.m_Height 默认拷贝
	}
	~Person() {
		//析构函数，将堆区开辟的内存释放
		if (m_Height != NULL) {
			delete m_Height;
			m_Height = NULL;
		}
		cout << "Person 析构函数的调用" << endl;
	}
	int m_Age;	//年龄
	int *m_Height;	//身高
};
void test01() {
	Person p1(18,160);
	cout << "p1的年龄是：" << p1.m_Age << "p1的身高是："<<*p1.m_Height<<endl;
	Person p2(p1);	//拷贝构造函数的调用
	cout << "p2的年龄是：" << p2.m_Age << "p2的身高是：" << *p2.m_Height << endl;
}
int main() {
	test01();

	return 0;
}
